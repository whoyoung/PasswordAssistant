# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := object-store
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=object-store' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DREALM_PLATFORM_NODE=1' \
	'-DREALM_ENABLE_SYNC=1' \
	'-DREALM_HAVE_CONFIG' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-O0 \
	-gdwarf-2 \
	-mmacosx-version-min=10.8 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-Wno-return-type \
	-Wno-unused-result \
	-Wno-deprecated-declarations \
	-Wundef

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=c++14 \
	-stdlib=libc++ \
	-fno-threadsafe-statics \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \
	-I/Users/young/.node-gyp/7.4.0/include/node \
	-I/Users/young/.node-gyp/7.4.0/src \
	-I/Users/young/.node-gyp/7.4.0/deps/uv/include \
	-I/Users/young/.node-gyp/7.4.0/deps/v8/include \
	-I$(srcdir)/../nan \
	-I$(srcdir)/src/object-store/src \
	-I$(srcdir)/src/object-store/src/impl \
	-I$(srcdir)/src/object-store/src/impl/apple \
	-I$(srcdir)/src/object-store/src/parser \
	-I$(srcdir)/src/object-store/external/pegtl \
	-I/Users/young/Documents/iOS/PasswordAssistant/node_modules/realm/vendor/realm-node/include

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=object-store' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DREALM_PLATFORM_NODE=1' \
	'-DREALM_ENABLE_SYNC=1' \
	'-DREALM_HAVE_CONFIG'

# Flags passed to all source files.
CFLAGS_Release := \
	-Os \
	-gdwarf-2 \
	-mmacosx-version-min=10.8 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-Wno-return-type \
	-Wno-unused-result \
	-Wno-deprecated-declarations \
	-Wundef

# Flags passed to only C files.
CFLAGS_C_Release := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=c++14 \
	-stdlib=libc++ \
	-fno-threadsafe-statics \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \
	-I/Users/young/.node-gyp/7.4.0/include/node \
	-I/Users/young/.node-gyp/7.4.0/src \
	-I/Users/young/.node-gyp/7.4.0/deps/uv/include \
	-I/Users/young/.node-gyp/7.4.0/deps/v8/include \
	-I$(srcdir)/../nan \
	-I$(srcdir)/src/object-store/src \
	-I$(srcdir)/src/object-store/src/impl \
	-I$(srcdir)/src/object-store/src/impl/apple \
	-I$(srcdir)/src/object-store/src/parser \
	-I$(srcdir)/src/object-store/external/pegtl \
	-I/Users/young/Documents/iOS/PasswordAssistant/node_modules/realm/vendor/realm-node/include

OBJS := \
	$(obj).target/$(TARGET)/src/object-store/src/binding_callback_thread_observer.o \
	$(obj).target/$(TARGET)/src/object-store/src/collection_notifications.o \
	$(obj).target/$(TARGET)/src/object-store/src/index_set.o \
	$(obj).target/$(TARGET)/src/object-store/src/list.o \
	$(obj).target/$(TARGET)/src/object-store/src/object.o \
	$(obj).target/$(TARGET)/src/object-store/src/object_schema.o \
	$(obj).target/$(TARGET)/src/object-store/src/object_store.o \
	$(obj).target/$(TARGET)/src/object-store/src/results.o \
	$(obj).target/$(TARGET)/src/object-store/src/schema.o \
	$(obj).target/$(TARGET)/src/object-store/src/shared_realm.o \
	$(obj).target/$(TARGET)/src/object-store/src/thread_safe_reference.o \
	$(obj).target/$(TARGET)/src/object-store/src/impl/collection_change_builder.o \
	$(obj).target/$(TARGET)/src/object-store/src/impl/collection_notifier.o \
	$(obj).target/$(TARGET)/src/object-store/src/impl/list_notifier.o \
	$(obj).target/$(TARGET)/src/object-store/src/impl/object_notifier.o \
	$(obj).target/$(TARGET)/src/object-store/src/impl/realm_coordinator.o \
	$(obj).target/$(TARGET)/src/object-store/src/impl/results_notifier.o \
	$(obj).target/$(TARGET)/src/object-store/src/impl/transact_log_handler.o \
	$(obj).target/$(TARGET)/src/object-store/src/impl/weak_realm_notifier.o \
	$(obj).target/$(TARGET)/src/object-store/src/parser/parser.o \
	$(obj).target/$(TARGET)/src/object-store/src/parser/query_builder.o \
	$(obj).target/$(TARGET)/src/object-store/src/util/format.o \
	$(obj).target/$(TARGET)/src/object-store/src/impl/apple/external_commit_helper.o \
	$(obj).target/$(TARGET)/src/object-store/src/impl/apple/keychain_helper.o \
	$(obj).target/$(TARGET)/src/object-store/src/sync/impl/apple/network_reachability_observer.o \
	$(obj).target/$(TARGET)/src/object-store/src/sync/impl/apple/system_configuration.o \
	$(obj).target/$(TARGET)/src/object-store/src/sync/sync_manager.o \
	$(obj).target/$(TARGET)/src/object-store/src/sync/sync_user.o \
	$(obj).target/$(TARGET)/src/object-store/src/sync/sync_session.o \
	$(obj).target/$(TARGET)/src/object-store/src/sync/impl/sync_file.o \
	$(obj).target/$(TARGET)/src/object-store/src/sync/impl/sync_metadata.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(obj).target/realm-core.stamp $(obj).target/realm-sync.stamp

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-framework Foundation \
	-mmacosx-version-min=10.8 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++ \
	-L/Users/young/Documents/iOS/PasswordAssistant/node_modules/realm/vendor/realm-node/ \
	-L/Users/young/Documents/iOS/PasswordAssistant/node_modules/realm/vendor/realm-node/lib \
	-L/Users/young/Documents/iOS/PasswordAssistant/node_modules/realm/vendor/realm-node/osx

LIBTOOLFLAGS_Debug := \
	-framework Foundation

LDFLAGS_Release := \
	-framework Foundation \
	-mmacosx-version-min=10.8 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++ \
	-L/Users/young/Documents/iOS/PasswordAssistant/node_modules/realm/vendor/realm-node/ \
	-L/Users/young/Documents/iOS/PasswordAssistant/node_modules/realm/vendor/realm-node/lib \
	-L/Users/young/Documents/iOS/PasswordAssistant/node_modules/realm/vendor/realm-node/osx

LIBTOOLFLAGS_Release := \
	-framework Foundation

LIBS := \
	-lrealm-node \
	-lrealm-sync-node

$(builddir)/object-store.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/object-store.a: LIBS := $(LIBS)
$(builddir)/object-store.a: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
$(builddir)/object-store.a: TOOLSET := $(TOOLSET)
$(builddir)/object-store.a: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,alink)

all_deps += $(builddir)/object-store.a
# Add target alias
.PHONY: object-store
object-store: $(builddir)/object-store.a

# Add target alias to "all" target.
.PHONY: all
all: object-store

# Add target alias
.PHONY: object-store
object-store: $(builddir)/object-store.a

# Short alias for building this static library.
.PHONY: object-store.a
object-store.a: $(builddir)/object-store.a

# Add static library to "all" target.
.PHONY: all
all: $(builddir)/object-store.a

